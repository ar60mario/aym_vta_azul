/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.main;

import ar.com.ventas.entities.Configuracion;
import ar.com.ventas.entities.EquipoActivo;
import ar.com.ventas.entities.Usuario;
import ar.com.ventas.frame.AbmClienteFrame;
import ar.com.ventas.frame.AbmClientesInactivosFrame;
import ar.com.ventas.frame.AbmIvaComprasFrame;
import ar.com.ventas.frame.AbmProductoFrame;
import ar.com.ventas.frame.AbmRubroFrame;
import ar.com.ventas.frame.AbmSubRubroFrame;
import ar.com.ventas.frame.AbmTipoDocForm;
import ar.com.ventas.frame.AbmVendedorFrame;
import ar.com.ventas.frame.ConfiguracionFrame;
import ar.com.ventas.frame.ConsultaAfipFrame;
import ar.com.ventas.frame.ConsultarPrecioFrame;
import ar.com.ventas.frame.FacturaWebFrame;
import ar.com.ventas.frame.ImportarClienteFrame;
import ar.com.ventas.frame.ImportarProductoFrame;
import ar.com.ventas.frame.NotaCreditoSelectFrame;
import ar.com.ventas.frame.NotaDebitoWebFrame;
import ar.com.ventas.frame.NotaDebitoWebSelectFrame;
import ar.com.ventas.frame.PedidoFrame;
import ar.com.ventas.frame.PedidosPendientesFrame;
import ar.com.ventas.frame.ProductosIvaCeroFrame;
import ar.com.ventas.frame.RecuperarDeAfipFrame;
import ar.com.ventas.frame.VentasXClienteFrame;
import ar.com.ventas.frame.VerIvaVentasPorPeriodoFrame;
import ar.com.ventas.frame.VerProductosFrame;
import ar.com.ventas.services.ConfiguracionService;
import ar.com.ventas.services.EquipoActivoService;
import ar.com.ventas.services.UsuarioService;
import ar.com.ventas.util.Globals;
import ar.com.ventas.util.LectorDeExcel;
import ar.com.ventas.util.UtilFrame;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.border.EmptyBorder;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;

/**
 *
 * @author supervisor
 */
public class MainFrame extends javax.swing.JFrame {

    private JPanel contentPanel;
    private String filtro = "";
    private Usuario usuario;
    private final Integer nivel = 1;
    private final SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//    private final Integer order_num;
//    private final String order_name;

    /**
     * Creates new form MainFrame
     *
     *
     */
    public MainFrame() {
        initComponents();
//        this.setLocationRelativeTo(null);

        contentPanel = jPanel1;
        
//System.out.println(localHost.getHostName());
//        iniciarConfiguracionBtn.setVisible(false);
        //order_name, order_num
//        this.order_name = order_name;
//        this.order_num = order_num;
//        tstInicio();
        int i = JFrame.PROPERTIES;
        JFrame jFrame = MainFrame.this;
        String str1 = UtilFrame.getNombreEquipo();
        String str0 = UtilFrame.getUsuario() + " " + str1;

        setBounds(100, 100, 800, 600);
        contentPanel.setBorder(new EmptyBorder(5, 5, 100, 5));
        contentPanel.setBorder(new TitledBorder(new EtchedBorder(EtchedBorder.LOWERED),
                str0, TitledBorder.LEFT, TitledBorder.BELOW_BOTTOM));

        jFrame.setDefaultCloseOperation(0);
        setContentPane(contentPanel);
//        limpiarFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jMenuItem5 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        facturaWebPedidosBtn = new javax.swing.JButton();
        facturarBtn = new javax.swing.JButton();
        facturaBtn = new javax.swing.JButton();
        consultarPrecioBtn = new javax.swing.JButton();
        notaCreditoBtn = new javax.swing.JButton();
        salirBtn = new javax.swing.JButton();
        mainMenuFrame = new javax.swing.JMenuBar();
        archivo = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        clientesMenu = new javax.swing.JMenuItem();
        productosMenu = new javax.swing.JMenuItem();
        rubroMenu = new javax.swing.JMenuItem();
        subRubroMenu = new javax.swing.JMenuItem();
        tipoDocMnu = new javax.swing.JMenuItem();
        vendedoresMnu = new javax.swing.JMenuItem();
        clientesInactivosMnu = new javax.swing.JMenuItem();
        productosIvaCeroMnu = new javax.swing.JMenuItem();
        salirMenu = new javax.swing.JMenuItem();
        herramientas = new javax.swing.JMenu();
        configMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        importarProductosMenu = new javax.swing.JMenuItem();
        importarClientesMnu = new javax.swing.JMenuItem();
        consultaAfipMnu = new javax.swing.JMenuItem();
        notaDebitoMnu = new javax.swing.JMenuItem();
        recuperarDeAfipMnu = new javax.swing.JMenuItem();
        informes = new javax.swing.JMenu();
        ivaVentasMenu = new javax.swing.JMenuItem();
        ventasPorCliente = new javax.swing.JMenuItem();
        informeProductosMnu = new javax.swing.JMenuItem();
        salirMnu = new javax.swing.JMenu();
        verMnu = new javax.swing.JMenu();
        versionMnu = new javax.swing.JMenuItem();

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("Distribuidora A y M"), this, org.jdesktop.beansbinding.BeanProperty.create("title"));
        bindingGroup.addBinding(binding);

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        facturaWebPedidosBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        facturaWebPedidosBtn.setText("Factura Web de Pedidos");
        facturaWebPedidosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturaWebPedidosBtnActionPerformed(evt);
            }
        });

        facturarBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        facturarBtn.setText("Pedido");
        facturarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturarBtnActionPerformed(evt);
            }
        });

        facturaBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        facturaBtn.setText("Factura Web Mostrador");
        facturaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facturaBtnActionPerformed(evt);
            }
        });

        consultarPrecioBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        consultarPrecioBtn.setText("Consultar Precio");
        consultarPrecioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarPrecioBtnActionPerformed(evt);
            }
        });

        notaCreditoBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        notaCreditoBtn.setText("Nota Cr√©dito");
        notaCreditoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notaCreditoBtnActionPerformed(evt);
            }
        });

        salirBtn.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        salirBtn.setText("Salir");
        salirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(facturarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(facturaBtn)
                        .addGap(18, 18, 18)
                        .addComponent(consultarPrecioBtn)
                        .addGap(18, 18, 18)
                        .addComponent(notaCreditoBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                        .addComponent(salirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(facturaWebPedidosBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(395, 395, 395)
                .addComponent(facturaWebPedidosBtn)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facturarBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(facturaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(consultarPrecioBtn)
                    .addComponent(notaCreditoBtn)
                    .addComponent(salirBtn))
                .addContainerGap())
        );

        archivo.setText("Archivo");
        archivo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jMenu1.setText("ABM");
        jMenu1.setFont(jMenu1.getFont().deriveFont(jMenu1.getFont().getSize()+2f));

        clientesMenu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        clientesMenu.setText("Clientes");
        clientesMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesMenuActionPerformed(evt);
            }
        });
        jMenu1.add(clientesMenu);

        productosMenu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        productosMenu.setText("Productos");
        productosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productosMenuActionPerformed(evt);
            }
        });
        jMenu1.add(productosMenu);

        rubroMenu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rubroMenu.setText("Rubro");
        rubroMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rubroMenuActionPerformed(evt);
            }
        });
        jMenu1.add(rubroMenu);

        subRubroMenu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        subRubroMenu.setText("Sub Rubro");
        subRubroMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subRubroMenuActionPerformed(evt);
            }
        });
        jMenu1.add(subRubroMenu);

        tipoDocMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tipoDocMnu.setText("Tipo Documento");
        tipoDocMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoDocMnuActionPerformed(evt);
            }
        });
        jMenu1.add(tipoDocMnu);

        vendedoresMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        vendedoresMnu.setText("Vendedores");
        vendedoresMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendedoresMnuActionPerformed(evt);
            }
        });
        jMenu1.add(vendedoresMnu);

        clientesInactivosMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        clientesInactivosMnu.setText("Clientes Inactivos");
        clientesInactivosMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesInactivosMnuActionPerformed(evt);
            }
        });
        jMenu1.add(clientesInactivosMnu);

        productosIvaCeroMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        productosIvaCeroMnu.setText("Productos Iva Cero");
        productosIvaCeroMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productosIvaCeroMnuActionPerformed(evt);
            }
        });
        jMenu1.add(productosIvaCeroMnu);

        archivo.add(jMenu1);

        salirMenu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        salirMenu.setText("Salir");
        salirMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirMenuActionPerformed(evt);
            }
        });
        archivo.add(salirMenu);

        mainMenuFrame.add(archivo);

        herramientas.setText("Herramientas");
        herramientas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        configMenu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        configMenu.setText("Configuraci√≥n");
        configMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configMenuActionPerformed(evt);
            }
        });
        herramientas.add(configMenu);

        jMenu2.setText("Importaci√≥n");
        jMenu2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        importarProductosMenu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        importarProductosMenu.setText("Productos");
        importarProductosMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarProductosMenuActionPerformed(evt);
            }
        });
        jMenu2.add(importarProductosMenu);

        importarClientesMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        importarClientesMnu.setText("Clientes");
        importarClientesMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarClientesMnuActionPerformed(evt);
            }
        });
        jMenu2.add(importarClientesMnu);

        herramientas.add(jMenu2);

        consultaAfipMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        consultaAfipMnu.setText("Consulta Afip");
        consultaAfipMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultaAfipMnuActionPerformed(evt);
            }
        });
        herramientas.add(consultaAfipMnu);

        notaDebitoMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        notaDebitoMnu.setText("Notas D√©bito");
        notaDebitoMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notaDebitoMnuActionPerformed(evt);
            }
        });
        herramientas.add(notaDebitoMnu);

        recuperarDeAfipMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        recuperarDeAfipMnu.setText("Recuperar de Afip");
        recuperarDeAfipMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recuperarDeAfipMnuActionPerformed(evt);
            }
        });
        herramientas.add(recuperarDeAfipMnu);

        mainMenuFrame.add(herramientas);

        informes.setText("Informes");
        informes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        ivaVentasMenu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ivaVentasMenu.setText("iva ventas");
        ivaVentasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivaVentasMenuActionPerformed(evt);
            }
        });
        informes.add(ivaVentasMenu);

        ventasPorCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ventasPorCliente.setText("Ventas x Cliente");
        ventasPorCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ventasPorClienteActionPerformed(evt);
            }
        });
        informes.add(ventasPorCliente);

        informeProductosMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        informeProductosMnu.setText("Productos");
        informeProductosMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informeProductosMnuActionPerformed(evt);
            }
        });
        informes.add(informeProductosMnu);

        mainMenuFrame.add(informes);

        salirMnu.setText("Salir");
        salirMnu.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        salirMnu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salirMnuMouseClicked(evt);
            }
        });
        mainMenuFrame.add(salirMnu);

        verMnu.setText("?");

        versionMnu.setText("Version");
        versionMnu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                versionMnuActionPerformed(evt);
            }
        });
        verMnu.add(versionMnu);

        mainMenuFrame.add(verMnu);

        setJMenuBar(mainMenuFrame);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirMenuActionPerformed
        salir();
    }//GEN-LAST:event_salirMenuActionPerformed

    private void clientesMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesMenuActionPerformed
        AbmClienteFrame abmCliente = new AbmClienteFrame(null, false);
        abmCliente.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_clientesMenuActionPerformed

    private void productosMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productosMenuActionPerformed
        AbmProductoFrame productoFrame = new AbmProductoFrame(filtro);
        productoFrame.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_productosMenuActionPerformed

    private void salirMnuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salirMnuMouseClicked
        salir();
    }//GEN-LAST:event_salirMnuMouseClicked

    private void rubroMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rubroMenuActionPerformed
        if (habilitado()) {
            AbmRubroFrame abmRubro = new AbmRubroFrame();
            abmRubro.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_rubroMenuActionPerformed

    private void subRubroMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subRubroMenuActionPerformed
        if (habilitado()) {
            AbmSubRubroFrame abmSubRubro = new AbmSubRubroFrame();
            abmSubRubro.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_subRubroMenuActionPerformed

    private void salirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirBtnActionPerformed
        salir();
    }//GEN-LAST:event_salirBtnActionPerformed

    private void facturarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturarBtnActionPerformed
        PedidoFrame pf = new PedidoFrame();
        pf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_facturarBtnActionPerformed

    private void importarProductosMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarProductosMenuActionPerformed
        if (habilitado()) {
            seleccionarArchivoImportarProductos();
        }
    }//GEN-LAST:event_importarProductosMenuActionPerformed

    private void configMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configMenuActionPerformed
        if (habilitado()) {
            configuracion();
        }
    }//GEN-LAST:event_configMenuActionPerformed

    private void importarClientesMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarClientesMnuActionPerformed
        if (habilitado()) {
            seleccionarArchivoImportarClientes();
        }
    }//GEN-LAST:event_importarClientesMnuActionPerformed

    private void ventasPorClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ventasPorClienteActionPerformed
        if (habilitado()) {
            VentasXClienteFrame vxcf = new VentasXClienteFrame();
            vxcf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_ventasPorClienteActionPerformed

    private void informeProductosMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informeProductosMnuActionPerformed
        if (habilitado()) {
            VerProductosFrame vpf = new VerProductosFrame();
            vpf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_informeProductosMnuActionPerformed

    private void facturaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturaBtnActionPerformed
        FacturaWebFrame ff = new FacturaWebFrame();
        ff.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_facturaBtnActionPerformed

    private void notaCreditoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notaCreditoBtnActionPerformed
        NotaCreditoSelectFrame ncf = new NotaCreditoSelectFrame();
        ncf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_notaCreditoBtnActionPerformed

    private void versionMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_versionMnuActionPerformed
        VersionFrame vf = new VersionFrame();
        vf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_versionMnuActionPerformed

    private void ivaVentasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivaVentasMenuActionPerformed
        if (habilitado()) {
            ivaVentas();
        }
    }//GEN-LAST:event_ivaVentasMenuActionPerformed

    private void facturaWebPedidosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facturaWebPedidosBtnActionPerformed
        PedidosPendientesFrame ppf = new PedidosPendientesFrame();
        ppf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_facturaWebPedidosBtnActionPerformed

    private void tipoDocMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoDocMnuActionPerformed
        if (habilitado()) {
            AbmTipoDocForm atdf = new AbmTipoDocForm();
            atdf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_tipoDocMnuActionPerformed

    private void consultaAfipMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultaAfipMnuActionPerformed
        ConsultaAfipFrame caf = new ConsultaAfipFrame();
        caf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_consultaAfipMnuActionPerformed

    private void consultarPrecioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarPrecioBtnActionPerformed
        ConsultarPrecioFrame cpf = new ConsultarPrecioFrame();
        cpf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_consultarPrecioBtnActionPerformed

    private void vendedoresMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendedoresMnuActionPerformed
        if (habilitado()) {
            AbmVendedorFrame abmv = new AbmVendedorFrame();
            abmv.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_vendedoresMnuActionPerformed

    private void notaDebitoMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notaDebitoMnuActionPerformed
        if (habilitado()) {
//            NotaDebitoWebFrame ndwf = new NotaDebitoWebFrame(order_name, order_num);
            NotaDebitoWebSelectFrame ndwf = new NotaDebitoWebSelectFrame();
            ndwf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_notaDebitoMnuActionPerformed

    private void recuperarDeAfipMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recuperarDeAfipMnuActionPerformed
        if (habilitado()) {
            RecuperarDeAfipFrame rdaf = new RecuperarDeAfipFrame();
            rdaf.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_recuperarDeAfipMnuActionPerformed

    private void clientesInactivosMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesInactivosMnuActionPerformed
        if (habilitado()) {
            clientesInactivos();
        }
    }//GEN-LAST:event_clientesInactivosMnuActionPerformed

    private void productosIvaCeroMnuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productosIvaCeroMnuActionPerformed
        productosIvaCero();
    }//GEN-LAST:event_productosIvaCeroMnuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu archivo;
    private javax.swing.JMenuItem clientesInactivosMnu;
    private javax.swing.JMenuItem clientesMenu;
    private javax.swing.JMenuItem configMenu;
    private javax.swing.JMenuItem consultaAfipMnu;
    private javax.swing.JButton consultarPrecioBtn;
    private javax.swing.JButton facturaBtn;
    private javax.swing.JButton facturaWebPedidosBtn;
    private javax.swing.JButton facturarBtn;
    private javax.swing.JMenu herramientas;
    private javax.swing.JMenuItem importarClientesMnu;
    private javax.swing.JMenuItem importarProductosMenu;
    private javax.swing.JMenuItem informeProductosMnu;
    private javax.swing.JMenu informes;
    private javax.swing.JMenuItem ivaVentasMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JMenuBar mainMenuFrame;
    private javax.swing.JButton notaCreditoBtn;
    private javax.swing.JMenuItem notaDebitoMnu;
    private javax.swing.JMenuItem productosIvaCeroMnu;
    private javax.swing.JMenuItem productosMenu;
    private javax.swing.JMenuItem recuperarDeAfipMnu;
    private javax.swing.JMenuItem rubroMenu;
    private javax.swing.JButton salirBtn;
    private javax.swing.JMenuItem salirMenu;
    private javax.swing.JMenu salirMnu;
    private javax.swing.JMenuItem subRubroMenu;
    private javax.swing.JMenuItem tipoDocMnu;
    private javax.swing.JMenuItem vendedoresMnu;
    private javax.swing.JMenuItem ventasPorCliente;
    private javax.swing.JMenu verMnu;
    private javax.swing.JMenuItem versionMnu;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void cambiarClave() {

    }

    private void seleccionarArchivoImportarProductos() {
        JFileChooser selector = new JFileChooser();
        selector.showOpenDialog(this);
        File archivo = selector.getSelectedFile();
        if (archivo != null) {
            if (LectorDeExcel.validarExtension(archivo)) {
                ImportarProductoFrame ipf = new ImportarProductoFrame(archivo);
                ipf.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "El formato elegido no est√° soportado.",
                        "Atencion",
                        JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    private void iniciarConfiguracion() {
        Configuracion conf = new Configuracion();
        conf.setIva((float) 21);
        conf.setNumeroFacturaA(1);
        conf.setSucursalA(1);
        conf.setNumeroFacturaB(1);
        conf.setSucursalB(1);

        try {
            new ConfiguracionService().saveConfiguracion(conf);
            JOptionPane.showMessageDialog(this, "El Archivo Configuraci√≥n fue Creado Correctamente.");
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "El Archivo Configuraci√≥n Creado con Anterioridad.",
                    "Atencion",
                    JOptionPane.WARNING_MESSAGE);
        }
    }

    private void seleccionarArchivoImportarClientes() {
        JFileChooser selector = new JFileChooser();
        selector.showOpenDialog(this);
        File archivo = selector.getSelectedFile();
        if (archivo != null) {
            if (LectorDeExcel.validarExtension(archivo)) {
                ImportarClienteFrame icf = new ImportarClienteFrame(archivo);
                icf.setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "El formato elegido no est√° soportado.",
                        "Atencion",
                        JOptionPane.WARNING_MESSAGE);
            }
        }
    }

    private void salir() {
        int escape = JOptionPane.showConfirmDialog(null, "CONFIRME SALIR DEL SISTEMA", "Atenci√≥n - salir de SISTEMA", JOptionPane.YES_NO_OPTION);
        // 0 = si; 1 = no
        if (escape == 0) {
            int si = 1; //cerrarSistema();
            if (si == 0) {
                JOptionPane.showMessageDialog(this, "ERROR SALIENDO DEL SISTEMA\nINTENTE NUEVAMENTE");
                return;
            }
            System.exit(0);
        }
    }

    private void configuracion() {
        ConfiguracionFrame cf = new ConfiguracionFrame();
        cf.setVisible(true);
        this.dispose();
    }

    private void ivaVentas() {
        VerIvaVentasPorPeriodoFrame vivpp = new VerIvaVentasPorPeriodoFrame();
        vivpp.setVisible(true);
        this.dispose();
    }

    private void ivaCompras() {
        AbmIvaComprasFrame aicf = new AbmIvaComprasFrame();
        aicf.setVisible(true);
        this.dispose();
    }

    private boolean habilitado() {
        FileReader fr = null;
        try {
            fr = new FileReader("c:/ventas/permisos.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String acceso = "";
        try {
            acceso = br.readLine();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (acceso.equals("1")) {
            return true;
        }
        habilitar();
        if (usuario != null) {
            return true;
        } else {
            return false;
        }
    }

    private void habilitar() {
        usuario = null;
        JTextField field = new JTextField("");
        String[] options = {"Ingresar"};
        int result = JOptionPane.showOptionDialog(
                null,
                field,
                "Autorizaci√≥n de USUARIO",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                0);
        if (field.getText().isEmpty()) {
            usuario = null;
            return;
        }
        switch (result) {
            case 0:
                int cod = Integer.valueOf(field.getText());
                try {
                    usuario = new UsuarioService().getUsuarioByCodigo(cod);
                } catch (Exception ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (usuario != null) {
                    if (usuario.getActivo()) {
                        JPasswordField field2 = new JPasswordField("");
                        String[] opts = {"Ingresar"};
                        int resulta = JOptionPane.showOptionDialog(
                                null,
                                field2,
                                "CONTRASE√ëA: " + usuario.getNombre() + ", Autorizaci√≥n",
                                JOptionPane.OK_CANCEL_OPTION,
                                JOptionPane.QUESTION_MESSAGE,
                                null,
                                opts,
                                0);
                        switch (resulta) {
                            case 0:
                                int contra = Integer.valueOf(new String(field2.getPassword()));
                                if (contra == usuario.getContrasena()) {
                                    if (usuario.getNivel() > nivel) {
                                        JOptionPane.showMessageDialog(this, "Usuario no Habilitado");
                                        usuario = null;
                                    } else {
                                        String f1 = sdf.format(usuario.getFecha());
                                        String f2 = sdf.format(new Date());
                                        if (usuario.getNivel() == 2) {
                                            if (!f1.equals(f2)) {
                                                JOptionPane.showMessageDialog(this, "Permiso de Usuario Vencido");
                                                usuario = null;
                                            }
                                        }
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Contrase√±a incorrecta");
                                    usuario = null;
                                }
                                break;
                            case 1:
                                usuario = null;
                                break;
                            case -1:
                                usuario = null;
                                break;
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
                        usuario = null;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No existe el Usuario");
                    usuario = null;
                }
                break;
            case 1:
                usuario = null;
                break;
            case -1:
                usuario = null;
                break;
        }
    }

    private void clientesInactivos() {
        AbmClientesInactivosFrame acif = new AbmClientesInactivosFrame(null, false);
        acif.setVisible(true);
        this.dispose();
    }

    private void productosIvaCero() {
        ProductosIvaCeroFrame picf = new ProductosIvaCeroFrame();
        picf.setVisible(true);
        this.dispose();
    }

    private void tstInicio() {
        Date fecha = new Date();
        Long cfg = 1L;
        Configuracion config;
        try {
            config = new ConfiguracionService().getFacturas(cfg);
        } catch (Exception ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            System.exit(0);
            return;
        }
        System.out.println(config);
        System.out.println(config.getUltimaFechaSistema());
        if (config.getUltimaFechaSistema() != null) {
            Date fechaSistemaAntes = config.getUltimaFechaSistema();
            String f1 = sdf.format(fecha);
            String f2 = sdf.format(fechaSistemaAntes);
            if (!f1.equals(f2)) {
                Date fechaUltimaCierre = config.getUltimaFechaCierre();
                String f3 = sdf.format(fechaUltimaCierre);
                if (f2.equals(f3)) {
//                    mensajeTxt.setText("Sistema Correcto");
//                    mensaje2Txt.setText("");
//                    ingresarBtn.setVisible(true);
                } else {
                    if (fechaSistemaAntes.before(fechaUltimaCierre)) {
//                        mensajeTxt.setText("Sistema Correcto");
//                        mensaje2Txt.setText("");
//                        ingresarBtn.setVisible(true);
                    } else {
                        getContentPane().setBackground(new java.awt.Color(255, 0, 0));
                        JOptionPane.showMessageDialog(this, "ERROR Nro.903 - NO PUEDE INICIAR EL SISTEMA");
                        System.exit(0);
//                        mensajeTxt.setText("Debe cerrar Caja Anterior!!!");
//                        mensaje2Txt.setText("Lo hace ahora?");
//                        siBtn.setVisible(true);
                    }
                }
            } else {
//                mensajeTxt.setText("Sistema Correcto");
//                mensaje2Txt.setText("");
//                ingresarBtn.setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "ERROR Nro.891 - NO PUEDE INICIAR EL SISTEMA");
            System.exit(0);
//            JOptionPane.showMessageDialog(this, "ERROR EN LAS FECHAS DEL SISTEMA\n"
//                    + "INGRESE AL SISTEMA APLIQUE LOS PAGOS SI NECESITA\n"
//                    + "Y CIERRE LA CAJA NORMALMENTE DESDE EL MENU");
        }
    }

//    private Integer cerrarSistema() {
//        EquipoActivo ea = null;
//        try {
//            ea = new EquipoActivoService().getEquipoActivoByNombreAndOrden(order_name, order_num, "A");
//        } catch (Exception ex) {
//            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//            return 0;
//        }
//        ea.setActivo(false);
//        try {
//            new EquipoActivoService().updateEquipoActivo(ea);
//            return 1;
//        } catch (Exception ex) {
//            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
//            return 0;
//        }
//    }
}
