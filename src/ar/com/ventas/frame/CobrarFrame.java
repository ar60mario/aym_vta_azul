/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Cliente;
import ar.com.ventas.entities.Configuracion;
import ar.com.ventas.entities.CtaCteCliente;
import ar.com.ventas.entities.Recibo;
import ar.com.ventas.services.ClienteService;
import ar.com.ventas.services.ConfiguracionService;
import ar.com.ventas.services.CtaCteClienteService;
import ar.com.ventas.services.ReciboService;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Mario
 */
public class CobrarFrame extends javax.swing.JFrame {

    private Date fecha;
    private Date fechaDe = null;
    private Date fechaHasta = null;
    private String filtro = "";
    private Cliente clienteSeleccionado = null;
    private Double importePagado = 0.0;
    private Double saldoDeudor = 0.0;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    private DecimalFormat df = new DecimalFormat("0.00");
    private Integer numeroDeRecibo = 0;
//    private final Integer order_num;
//private final String order_name;

    /**
     * Creates new form CobrarFrame
     */
    public CobrarFrame(Cliente cli, Date feD, Date feHa) {
        this.clienteSeleccionado = cli;
        this.fechaDe = feD;
        this.fechaHasta = feHa;
//        this.order_name = order_name;
//this.order_num = order_num;
        initComponents();
        limpiarCampos();
        colocarNumeroRecibo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        volverBtn = new javax.swing.JButton();
        clienteABuscarTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        saldoDeudorTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        importePagadoTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cobrarBtn = new javax.swing.JButton();
        numeroReciboTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fechaTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nombreClienteTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        clienteABuscarTxt.setText("CLIENTE CODIGO");

        jLabel1.setText("Cliente Buscar:");

        saldoDeudorTxt.setText("SALDO CLIENTE");

        jLabel2.setText("Saldo:");

        importePagadoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        importePagadoTxt.setText("IMPORTE PAGADO");
        importePagadoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                importePagadoTxtKeyPressed(evt);
            }
        });

        jLabel3.setText("Importe Pagado:");

        cobrarBtn.setText("Cobrar");
        cobrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cobrarBtnActionPerformed(evt);
            }
        });

        numeroReciboTxt.setText("NUMERO RECIBO");

        jLabel4.setText("Numero Recibo:");

        jLabel5.setText("Fecha:");

        fechaTxt.setText("FECHA");
        fechaTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fechaTxtKeyPressed(evt);
            }
        });

        jLabel6.setText("Cliente Nombre:");

        nombreClienteTxt.setText("NOMBRE CLIENTE A COBRAR");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(cobrarBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(saldoDeudorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(clienteABuscarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(85, 85, 85))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(importePagadoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nombreClienteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numeroReciboTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(numeroReciboTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clienteABuscarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(nombreClienteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saldoDeudorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(31, 31, 31))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(importePagadoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverBtn)
                    .addComponent(cobrarBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        VerCuentaCorrienteClienteFrame mf = 
                new VerCuentaCorrienteClienteFrame(clienteSeleccionado, fechaDe, fechaHasta);
        mf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_volverBtnActionPerformed

    private void cobrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cobrarBtnActionPerformed
        cobrar(clienteSeleccionado,fechaDe,fechaHasta);
    }//GEN-LAST:event_cobrarBtnActionPerformed

    private void importePagadoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_importePagadoTxtKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cobrar(clienteSeleccionado,fechaDe,fechaHasta);
        } else {
            if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
                VerCuentaCorrienteClienteFrame vccf = 
                        new VerCuentaCorrienteClienteFrame(clienteSeleccionado, fechaDe, fechaHasta);
                vccf.setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_importePagadoTxtKeyPressed

    private void fechaTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fechaTxtKeyPressed
        if (evt.getKeyCode() == 10) {
            if (fechaTxt.getText().isEmpty()) {
                fechaTxt.setText(sdf.format(new Date()));
                fechaTxt.requestFocus(); //mismo campo
            } else {
                int largo = fechaTxt.getText().length();
                if (largo == 2) {
                    Calendar cal = Calendar.getInstance();
                    int mes = cal.get(Calendar.MONTH) + 1;
                    int anio = cal.get(Calendar.YEAR);
                    String an = String.valueOf(anio);
                    String f = "0" + String.valueOf(mes);
                    if (f.length() > 2) {
                        f = f.substring(1, 3);
                    }
                    f = f + "/" + an;
                    fechaTxt.setText(fechaTxt.getText() + "/" + f);
                    importePagadoTxt.requestFocus();// request focus prox campo
                } else {
                    if (largo == 5) {
                        Calendar cal = Calendar.getInstance();
                        int anio = cal.get(Calendar.YEAR);
                        String an = "/" + String.valueOf(anio);
                        fechaTxt.setText(fechaTxt.getText() + an);
                        importePagadoTxt.requestFocus(); // request focus prox campo
                    } else {
                        if (largo == 8) {
                            String x_f = fechaTxt.getText();
                            String x_f1 = x_f.substring(0, 6);
                            String x_f2 = x_f.substring(6, 8);
                            fechaTxt.setText(x_f1 + "20" + x_f2);
                            importePagadoTxt.requestFocus(); // request focus prox campo
                        } else {
                            if (largo != 10) {
                                JOptionPane.showMessageDialog(this, "Error en fecha");
                                fechaTxt.setText("");
                                fechaTxt.requestFocus(); // request focus mismo campo
                            } else {
                                String veinte = fechaTxt.getText().substring(6, 8);
                                if (!veinte.equals("20")) {
                                    JOptionPane.showMessageDialog(this, "Error en AÑO");
                                    fechaTxt.requestFocus(); // request focus mismo campo
                                } else {
                                    importePagadoTxt.requestFocus(); // request focus prox campo
                                }
                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_fechaTxtKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CobrarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CobrarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CobrarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CobrarFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CobrarFrame(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField clienteABuscarTxt;
    private javax.swing.JButton cobrarBtn;
    private javax.swing.JTextField fechaTxt;
    private javax.swing.JTextField importePagadoTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField nombreClienteTxt;
    private javax.swing.JTextField numeroReciboTxt;
    private javax.swing.JTextField saldoDeudorTxt;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables

    private void limpiarCampos() {
        fecha = new Date();
        clienteABuscarTxt.setText("");
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        fechaTxt.setText(sdf.format(fecha));
        importePagadoTxt.setText("");
        numeroReciboTxt.setText("");
        saldoDeudorTxt.setText("");
        clienteABuscarTxt.setText("");
    }

    private void colocarNumeroRecibo() {
        Configuracion config = new Configuracion();
        try {
            config = new ConfiguracionService().getFacturas(1L);
        } catch (Exception ex) {
            Logger.getLogger(CobrarFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        numeroDeRecibo = config.getNumeroRecibo() + 1;
        numeroReciboTxt.setText(String.valueOf(numeroDeRecibo));
        clienteABuscarTxt.setText(clienteSeleccionado.getCodigo());
        nombreClienteTxt.setText(clienteSeleccionado.getRazonSocial());
        saldoDeudor = clienteSeleccionado.getSaldo();
        saldoDeudorTxt.setText(String.valueOf(df.format(clienteSeleccionado.getSaldo())));
        importePagadoTxt.requestFocus();
    }

    private void cobrar(Cliente cli,Date feD,Date feH) {
        if (!importePagadoTxt.getText().isEmpty()) {
            importePagado = Double.valueOf(importePagadoTxt.getText());
            if (importePagado > 0.0) {
                String imprt = String.valueOf(df.format(Double.valueOf(importePagadoTxt.getText())));
                int confirma = JOptionPane.showConfirmDialog(this, "PAGO REALIZADO:" + "\n" + nombreClienteTxt.getText() + "\n $ " + imprt, "PAGO", JOptionPane.YES_NO_OPTION);
                //int confirma = JOptionPane.showConfirmDialog(this, "PAGO " + nombreClienteTxt.getText() + importePagadoTxt.getText(), "PAGO", JOptionPane.YES_NO_OPTION);
                // 0 = si; 1 = no
                if (confirma == 0) {
                    saldoDeudor = clienteSeleccionado.getSaldo();
                    saldoDeudor = saldoDeudor - importePagado;
                    clienteSeleccionado.setSaldo(saldoDeudor);
                    Configuracion conf = new Configuracion();
                    try {
                        conf = new ConfiguracionService().getFacturas(1L);
                    } catch (Exception ex) {
                        Logger.getLogger(CobrarFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    conf.setNumeroRecibo(numeroDeRecibo);
                    try {
                        new ConfiguracionService().updateConfiguracion(conf);
                    } catch (Exception ex) {
                        Logger.getLogger(CobrarFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        new ClienteService().updateCliente(clienteSeleccionado);
                    } catch (Exception ex) {
                        Logger.getLogger(CobrarFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    limpiarCampos();
                    Recibo rc = new Recibo();
                    try {
                        rc.setFecha(sdf.parse(fechaTxt.getText()));
                    } catch (ParseException ex) {
                        Logger.getLogger(CobrarFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    rc.setImporte(importePagado);
                    rc.setNumero(numeroDeRecibo);
                    rc.setCliente(clienteSeleccionado);
                    try {
                        new ReciboService().saveRecibo(rc);
                    } catch (Exception ex) {
                        Logger.getLogger(CobrarFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    CtaCteCliente cta = new CtaCteCliente();
                    try {
                        cta.setFecha(sdf.parse(fechaTxt.getText()));
                    } catch (ParseException ex) {
                        Logger.getLogger(CobrarFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    cta.setDebe(0.0);
                    cta.setHaber(importePagado);
                    cta.setSaldo(saldoDeudor);
                    cta.setCliente(clienteSeleccionado);
                    cta.setTipo("RC");
                    cta.setRecibo(rc);
                    cta.setFactura(null);
                    cta.setNotaCredito(null);
                    try {
                        new CtaCteClienteService().saveCtaCteCliente(cta);
                    } catch (Exception ex) {
                        Logger.getLogger(CobrarFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Proceso de Cobro Cancelado");
                }
            }
            VerCuentaCorrienteClienteFrame mf = new VerCuentaCorrienteClienteFrame(cli, feD, feH);
            mf.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un importe para realizar cobranza");
        }
    }
}
