/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.ventas.frame;

import ar.com.ventas.entities.Cliente;
import ar.com.ventas.entities.ClienteTraba;
import ar.com.ventas.entities.CustomerTraba;
import ar.com.ventas.entities.Domicilio;
import ar.com.ventas.entities.TipoDoc;
import ar.com.ventas.entities.Usuario;
import ar.com.ventas.entities.Vendedor;
import ar.com.ventas.services.ClienteService;
import ar.com.ventas.services.ClienteTrabaService;
import ar.com.ventas.services.CustomerTrabaService;
import ar.com.ventas.services.TipoDocService;
import ar.com.ventas.services.UsuarioService;
import ar.com.ventas.services.VendedorService;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author Marcela
 */
public class ModificarClienteFrame extends javax.swing.JFrame {

    private final Logger logger = Logger.getLogger("EditarClienteFrame");
    //private List<Cliente> lista = new ArrayList<Cliente>();
    private final Cliente cliente;
    private List<TipoDoc> tipos = null;
    private List<Vendedor> vendedores = null;
    private Integer row;
    private DecimalFormat df1 = new DecimalFormat("#0.0");
    private Usuario usuario;
    private final Integer nivel = 2;
    private Boolean o;
    private SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//    private final Integer order_num;
//    private final String order_name;

    // private Domicilio domicilio;
    /**
     *
     * 
     * @param cliente
     * @param row
     * @param o
     */
    public ModificarClienteFrame(Cliente cliente, Integer row, Boolean o) {
        initComponents();
        this.row = row;
        this.o = o;
        //limpiarCampos();
        this.cliente = cliente;
//        this.order_num = order_num;
//        this.order_name = order_name;
        llenarComboTipo();
        llenarCampos();
        codigoTxt.setEditable(false);
        razonSocialTxt.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        guardarClienteBtn = new javax.swing.JButton();
        volverNuevoClienteBtn = new javax.swing.JButton();
        codigoTxt = new javax.swing.JTextField();
        razonSocialTxt = new javax.swing.JTextField();
        cuitTxt = new javax.swing.JTextField();
        calleTxt = new javax.swing.JTextField();
        telTxt = new javax.swing.JTextField();
        celTxt = new javax.swing.JTextField();
        mailTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        obsTxt = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        numeroTxt = new javax.swing.JTextField();
        pisoTxt = new javax.swing.JTextField();
        departamentoTxt = new javax.swing.JTextField();
        localidadTxT = new javax.swing.JTextField();
        provinciaTxt = new javax.swing.JTextField();
        descuentoTxt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        codigoPostalTxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        llevaDtoChk = new javax.swing.JCheckBox();
        comboCategoria = new javax.swing.JComboBox();
        comboFormasPago = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        activoChk = new javax.swing.JCheckBox();
        jLabel15 = new javax.swing.JLabel();
        comboTipo = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        comboVendedores = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        entregaTxt = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        aliasTxt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MODIFICAR CLIENTE");

        guardarClienteBtn.setText("Guardar");
        guardarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarClienteBtnActionPerformed(evt);
            }
        });

        volverNuevoClienteBtn.setText("Volver");
        volverNuevoClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverNuevoClienteBtnActionPerformed(evt);
            }
        });

        codigoTxt.setText("Id");
        codigoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoTxtActionPerformed(evt);
            }
        });

        razonSocialTxt.setText("Razón Social");

        cuitTxt.setText("Cuit");
        cuitTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cuitTxtActionPerformed(evt);
            }
        });

        calleTxt.setText("Domicilio");
        calleTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calleTxtActionPerformed(evt);
            }
        });

        telTxt.setText("Teléfono");

        celTxt.setText("Celular");

        mailTxt.setText("Maiil");

        jLabel1.setText("Codigo:");

        jLabel2.setText("Razón Social");

        jLabel3.setText("Cuit");

        jLabel4.setText("Calle");

        jLabel5.setText("Categoria");

        jLabel6.setText("Telefono");

        jLabel7.setText("Celular");

        jLabel8.setText("Mail");

        jLabel9.setText("Observaciones");

        obsTxt.setColumns(20);
        obsTxt.setRows(5);
        jScrollPane2.setViewportView(obsTxt);

        jLabel10.setText("Numero");

        jLabel11.setText("Piso");

        jLabel12.setText("Dto");

        jLabel13.setText("Localidad");

        jLabel14.setText("Provincia");

        numeroTxt.setText("Numero");

        pisoTxt.setText("Piso");

        departamentoTxt.setText("Departam");

        localidadTxT.setText("Localidad");

        provinciaTxt.setText("Provincia");

        descuentoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        descuentoTxt.setText("Descuento");

        jLabel16.setText("Codigo Postal");

        codigoPostalTxt.setText("CODIGO POSTAL");

        jLabel17.setText("Forma de Pago");

        llevaDtoChk.setText("Lleva descuento");

        comboCategoria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboFormasPago.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel18.setText("*");

        jLabel19.setText("*");

        jLabel20.setText("*");

        jLabel21.setText("*");

        jLabel23.setText("*");

        activoChk.setText("Activo");

        jLabel15.setText("Tipo:");

        comboTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel24.setText("Vendedor:");

        comboVendedores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel25.setText("Descuento:");

        jLabel22.setText("Entrega:");

        entregaTxt.setText("ENTREGA");

        jLabel26.setText("Alias:");

        aliasTxt.setText("ALIAS");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel16))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(codigoTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cuitTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(localidadTxT, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                                            .addComponent(provinciaTxt)
                                            .addComponent(departamentoTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                                            .addComponent(pisoTxt))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jLabel15)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel20)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel18)
                                                                .addGap(63, 63, 63)
                                                                .addComponent(activoChk))
                                                            .addComponent(comboVendedores, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(0, 0, Short.MAX_VALUE))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(110, 110, 110)
                                                .addComponent(jLabel24)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel23))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel25)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(descuentoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(calleTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(telTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(celTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(mailTxt, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                            .addComponent(numeroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                            .addComponent(jLabel21))
                                                        .addComponent(razonSocialTxt, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel17)
                                                        .addComponent(comboFormasPago, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel19))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(codigoPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                                                .addComponent(llevaDtoChk)
                                                .addGap(32, 32, 32)))
                                        .addGap(0, 36, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(jLabel26))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(aliasTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(16, 16, 16)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(guardarClienteBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverNuevoClienteBtn)
                        .addGap(97, 97, 97))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(entregaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 643, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel18)
                    .addComponent(activoChk)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(razonSocialTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel19)
                    .addComponent(aliasTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuitTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel20)
                    .addComponent(jLabel15)
                    .addComponent(comboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calleTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(numeroTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(pisoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboFormasPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(departamentoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(localidadTxT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboVendedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(codigoPostalTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(llevaDtoChk))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(provinciaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descuentoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(celTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(entregaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(volverNuevoClienteBtn)
                    .addComponent(guardarClienteBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarClienteBtnActionPerformed
        if (habilitado()) {
            guardarCliente();
        }
    }//GEN-LAST:event_guardarClienteBtnActionPerformed

    private void volverNuevoClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverNuevoClienteBtnActionPerformed
        AbmClienteFrame abmClienteFrame = new AbmClienteFrame(row, o);
        this.dispose();
        abmClienteFrame.setVisible(true);
    }//GEN-LAST:event_volverNuevoClienteBtnActionPerformed

    private void codigoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigoTxtActionPerformed

    private void cuitTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cuitTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cuitTxtActionPerformed

    private void calleTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calleTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_calleTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarClienteFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarClienteFrame(null, null, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox activoChk;
    private javax.swing.JTextField aliasTxt;
    private javax.swing.JTextField calleTxt;
    private javax.swing.JTextField celTxt;
    private javax.swing.JTextField codigoPostalTxt;
    private javax.swing.JTextField codigoTxt;
    private javax.swing.JComboBox comboCategoria;
    private javax.swing.JComboBox comboFormasPago;
    private javax.swing.JComboBox comboTipo;
    private javax.swing.JComboBox comboVendedores;
    private javax.swing.JTextField cuitTxt;
    private javax.swing.JTextField departamentoTxt;
    private javax.swing.JTextField descuentoTxt;
    private javax.swing.JTextField entregaTxt;
    private javax.swing.JButton guardarClienteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox llevaDtoChk;
    private javax.swing.JTextField localidadTxT;
    private javax.swing.JTextField mailTxt;
    private javax.swing.JTextField numeroTxt;
    private javax.swing.JTextArea obsTxt;
    private javax.swing.JTextField pisoTxt;
    private javax.swing.JTextField provinciaTxt;
    private javax.swing.JTextField razonSocialTxt;
    private javax.swing.JTextField telTxt;
    private javax.swing.JButton volverNuevoClienteBtn;
    // End of variables declaration//GEN-END:variables

    private void guardarCliente() {
        String c = cliente.getCodigo();
        ClienteTraba ct = null;
        try {
            ct = new ClienteTrabaService().getClienteByCodigo(c);
        } catch (Exception ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (ct.getTraba1() != null) {
            if (ct.getTraba1()) {
                JOptionPane.showMessageDialog(this, "Cliente Bloqueado para esta operación");
                return;
            }
        }
        CustomerTraba cuTr = null;
        try {
            cuTr = new CustomerTrabaService().getClienteByCodigo(c);
        } catch (Exception ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (cuTr.getTraba2() != null) {
            if (cuTr.getTraba2()) {
                JOptionPane.showMessageDialog(this, "Cliente Bloqueado para esta operación");
                return;
            }
        }
        if (validarCampos()) {
            cliente.setCodigo(codigoTxt.getText());
            cliente.setRazonSocial(razonSocialTxt.getText());
            cliente.setCuit(cuitTxt.getText());
            cliente.setAlias(aliasTxt.getText());
            cliente.setCategoriaDeIva(comboCategoria.getSelectedIndex());
            cliente.setTelefono(telTxt.getText());
            cliente.setCelular(celTxt.getText());
            cliente.setMail(mailTxt.getText());
            cliente.setObservaciones(obsTxt.getText());
            cliente.setFormaDePago(comboFormasPago.getSelectedIndex());
            cliente.setVendedor(vendedores.get(comboVendedores.getSelectedIndex() - 1));
            if (activoChk.isSelected()) {
                cliente.setActivo(true);
            } else {
                cliente.setActivo(false);
            }
            if (llevaDtoChk.isSelected()) {
                cliente.setTieneDescuento(true);
                cliente.setDescuento(Float.valueOf(descuentoTxt.getText().replace(",", ".")));
            } else {
                cliente.setTieneDescuento(false);
                cliente.setDescuento(Float.valueOf(0F));
            }
            if (entregaTxt.getText().isEmpty()) {
                cliente.setEntrega("");
            } else {
                cliente.setEntrega(entregaTxt.getText());
            }
            Domicilio domicilio = cliente.getDomicilio();
            domicilio.setCalle(calleTxt.getText());
            domicilio.setNumero(numeroTxt.getText());
            domicilio.setPiso(pisoTxt.getText());
            domicilio.setDepartamento(departamentoTxt.getText());
            domicilio.setLocalidad(localidadTxT.getText());
            domicilio.setProvincia(provinciaTxt.getText());
            domicilio.setCodigoPostal(codigoPostalTxt.getText());
            cliente.setDomicilio(domicilio);
            cliente.setTipo(tipos.get(comboTipo.getSelectedIndex() - 1).getCodigo());
            try {
                new ClienteService().updateCliente(cliente);
                JOptionPane.showMessageDialog(this, "CLIENTE guardado correctamente.");
            } catch (Exception ex) {
                Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "CLIENTE no guardado.");
            }
            AbmClienteFrame acf = new AbmClienteFrame(row, o);
            acf.setVisible(true);
            this.dispose();
        }
    }

    private void llenarCampos() {
        Domicilio domicilio = cliente.getDomicilio();
        codigoTxt.setText(cliente.getCodigo());
        if (cliente.getAlias() != null) {
            aliasTxt.setText(cliente.getAlias());
        } else {
            aliasTxt.setText("");
        }
        celTxt.setText(cliente.getCelular());
        cuitTxt.setText(cliente.getCuit());
        razonSocialTxt.setText(cliente.getRazonSocial());
        telTxt.setText(cliente.getTelefono());
        mailTxt.setText(cliente.getMail());
        obsTxt.setText(cliente.getObservaciones());
        descuentoTxt.setText(df1.format(cliente.getDescuento()));
        if (cliente.getTieneDescuento()) {
            llevaDtoChk.setSelected(true);
        } else {
            llevaDtoChk.setSelected(false);
        }
        if (cliente.getActivo()) {
            activoChk.setSelected(true);
        } else {
            activoChk.setSelected(false);
        }
        if (cliente.getEntrega() != null) {
            entregaTxt.setText(cliente.getEntrega());
        } else {
            entregaTxt.setText("");
        }
        // aqui se desarma domicilio en sus componentes:
        // calle numero piso dto, etc
        calleTxt.setText(domicilio.getCalle());
        numeroTxt.setText(domicilio.getNumero());
        pisoTxt.setText(domicilio.getPiso());
        departamentoTxt.setText(domicilio.getDepartamento());
        codigoPostalTxt.setText(domicilio.getCodigoPostal());
        localidadTxT.setText(domicilio.getLocalidad());
        provinciaTxt.setText(domicilio.getProvincia());

        //lenar combo categoria y combo Formas pago
        comboCategoria.removeAllItems();
        comboFormasPago.removeAllItems();
        comboCategoria.addItem("");
        comboFormasPago.addItem("");
        DefaultComboBoxModel model = (DefaultComboBoxModel) comboCategoria.getModel();

        model.addElement("1- Inscripto");
        model.addElement("2- Monotributo");
        model.addElement("3- Exento");
        model.addElement("4- Consumidor Final");

        DefaultComboBoxModel model2 = (DefaultComboBoxModel) comboFormasPago.getModel();

        model2.addElement("1- Contado");
        model2.addElement("2- 7 dias fecha factura");
        model2.addElement("3- 14-dias fecha factura");
        model2.addElement("4- otro");

        comboCategoria.setModel(model);
        comboFormasPago.setModel(model2);
        if (cliente.getCategoriaDeIva() != null) {
            comboCategoria.setSelectedIndex(cliente.getCategoriaDeIva());
        }
        if (cliente.getFormaDePago() != null) {
            comboFormasPago.setSelectedIndex(cliente.getFormaDePago());
        }
        int x = 1;
        for (TipoDoc tipo : tipos) {
            if (tipo.getCodigo().equals(cliente.getTipo())) {
                comboTipo.setSelectedIndex(x);
                break;
            }
            x += 1;
        }
        x = 1;
        Boolean encontrado = false;
        for (Vendedor ve : vendedores) {
            if (cliente.getVendedor() != null) {
                if (ve.getCodigo().equals(cliente.getVendedor().getCodigo())) {
                    comboVendedores.setSelectedIndex(x);
                    encontrado = true;
                    break;
                }
                x += 1;
            }
        }
        if (!encontrado) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un vendedor para este Cliente");
        }
    }

    private boolean validarCampos() {
        if (comboVendedores.getSelectedIndex() < 1) {
            JOptionPane.showMessageDialog(this, "Debe asignar Vendedor a Cliente");
            return false;
        }
        if (codigoTxt.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "CLIENTE - Verifique el Codigo.");
            return false;
        }
        if (cuitTxt.getText().length() != 13) {
            if (tipos.get(comboTipo.getSelectedIndex() - 1).getCodigo() != "96" || tipos.get(comboTipo.getSelectedIndex() - 1).getCodigo() != "99") {
                JOptionPane.showMessageDialog(this, "CLIENTE - Verifique la CUIT lleva guiones.");
                cuitTxt.requestFocus();
                return false;
            }
        }
        if (comboTipo.getSelectedIndex() < 1) {
            JOptionPane.showMessageDialog(this, "Cliente - Seleccione Tipo de CUIT");
            return false;
        }
        if (comboCategoria.getSelectedIndex() < 1) {
            String str4 = cuitTxt.getText().substring(0, 5);
            if (str4.equals("11-11")) {
                String ct = tipos.get(comboTipo.getSelectedIndex() - 1).getCodigo();
                if (ct.equals("99")) {
                    comboCategoria.setSelectedIndex(4);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Cliente - Selecione CATEGORIA");
                comboCategoria.requestFocus();
                return false;
            }
        }
        if (numeroTxt.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "CLIENTE - Verifique el Número.");
            return false;
        }
        if (razonSocialTxt.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Cliente - Verifique la Razon Social.");
            return false;
        }
        if (comboCategoria.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Cliente - Seleccione la Categoria del Cliente");
            return false;
        }
        if (comboFormasPago.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(this, "Cliente - Seleccione la Forma de Pago del cliente");
        }
        if (calleTxt.getText().trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Cliente - Complete la Calle");
            return false;
        }
        return true;
    }

    private void llenarComboTipo() {
        comboTipo.removeAllItems();
        comboTipo.addItem("");
        try {
            tipos = new TipoDocService().getAllTipoDocs();
        } catch (Exception ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (tipos != null && !tipos.isEmpty()) {
            for (TipoDoc tipo : tipos) {
                comboTipo.addItem(tipo.getDescripcion());
            }
        }
        vendedores = null;
        try {
            vendedores = new VendedorService().getAllVendedors();
        } catch (Exception ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboVendedores.removeAllItems();
        comboVendedores.addItem("");
        if (vendedores != null && !vendedores.isEmpty()) {
            for (Vendedor ve : vendedores) {
                comboVendedores.addItem(ve.getNombre());
            }
        }
    }

    private boolean habilitado() {
        FileReader fr = null;
        try {
            fr = new FileReader("c:/ventas/permisos.txt");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);
        String acceso = "";
        try {
            acceso = br.readLine();
        } catch (IOException ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            br.close();
        } catch (IOException ex) {
            Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (acceso.equals("1")) {
            return true;
        }
        habilitar();
        if (usuario != null) {
            return true;
        } else {
            return false;
        }
    }

    private void habilitar() {
        usuario = null;
        JTextField field = new JTextField("");
        String[] options = {"Ingresar"};
        int result = JOptionPane.showOptionDialog(
                null,
                field,
                "Autorización de USUARIO",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                0);
        if (field.getText().isEmpty()) {
            usuario = null;
            return;
        }
        switch (result) {
            case 0:
                int cod = Integer.valueOf(field.getText());
                try {
                    usuario = new UsuarioService().getUsuarioByCodigo(cod);
                } catch (Exception ex) {
                    Logger.getLogger(ModificarClienteFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (usuario != null) {
                    if (usuario.getActivo()) {
                        JPasswordField field2 = new JPasswordField("");
                        String[] opts = {"Ingresar"};
                        int resulta = JOptionPane.showOptionDialog(
                                null,
                                field2,
                                "CONTRASEÑA: " + usuario.getNombre() + ", Autorización",
                                JOptionPane.OK_CANCEL_OPTION,
                                JOptionPane.QUESTION_MESSAGE,
                                null,
                                opts,
                                0);
                        switch (resulta) {
                            case 0:
                                int contra = Integer.valueOf(new String(field2.getPassword()));
                                if (contra == usuario.getContrasena()) {
                                    if (usuario.getNivel() > nivel) {
                                        JOptionPane.showMessageDialog(this, "Usuario no Habilitado");
                                        usuario = null;
                                    } else {
                                        String f1 = sdf.format(usuario.getFecha());
                                        String f2 = sdf.format(new Date());
                                        if (usuario.getNivel() == 2) {
                                            if (!f1.equals(f2)) {
                                                JOptionPane.showMessageDialog(this, "Permiso de Usuario Vencido");
                                                usuario = null;
                                            }
                                        }
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(this, "Contraseña incorrecta");
                                    usuario = null;
                                }
                                break;
                            case 1:
                                usuario = null;
                                break;
                            case -1:
                                usuario = null;
                                break;
                        }
                    } else {
                        JOptionPane.showMessageDialog(this, "USUARIO Inactivo");
                        usuario = null;
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "No existe el Usuario");
                    usuario = null;
                }
                break;
            case 1:
                usuario = null;
                break;
            case -1:
                usuario = null;
                break;
        }
    }
}
